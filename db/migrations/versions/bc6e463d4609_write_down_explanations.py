"""WRITE_DOWN_EXPLANATIONS

Revision ID: bc6e463d4609
Revises: 
Create Date: 2022-08-10 10:35:36.925036

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
import sqlalchemy_utils
import uuid

# revision identifiers, used by Alembic.
revision = 'bc6e463d4609'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('input_curriculums',
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('curriculum_name', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('output_curriculums',
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('curriculum_name', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('users',
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('username', sa.String(length=256), nullable=False),
    sa.Column('student_in_year_of_posse', sa.Float(), nullable=False),
    sa.Column('university', sa.String(length=256), nullable=True),
    sa.Column('university_entrance_year', sa.Integer(), nullable=True),
    sa.Column('expected_university_graduation_year', sa.Integer(), nullable=True),
    sa.Column('line_id', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('weeks',
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('week_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.ForeignKeyConstraint(['week_id'], ['weeks.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('learning_times',
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('learning_time', sa.Integer(), nullable=False),
    sa.Column('week_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.uuid'], ),
    sa.ForeignKeyConstraint(['week_id'], ['weeks.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('looking_backs',
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('good_point', sa.String(length=256), nullable=False),
    sa.Column('why_it_worked', sa.String(length=256), nullable=False),
    sa.Column('should_continue', sa.String(length=256), nullable=False),
    sa.Column('bad_point', sa.String(length=256), nullable=False),
    sa.Column('why_it_didnt_worked', sa.String(length=256), nullable=False),
    sa.Column('should_stop', sa.String(length=256), nullable=False),
    sa.Column('improve_point', sa.String(length=256), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('week_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.uuid'], ),
    sa.ForeignKeyConstraint(['week_id'], ['weeks.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('users_input_curriculums',
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('input_curriculum_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.ForeignKeyConstraint(['input_curriculum_id'], ['input_curriculums.uuid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('user_id', 'input_curriculum_id')
    )
    op.create_table('users_output_curriculums',
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.Column('output_curriculum_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), default=uuid.uuid4, nullable=False),
    sa.ForeignKeyConstraint(['output_curriculum_id'], ['output_curriculums.uuid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('user_id', 'output_curriculum_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_output_curriculums')
    op.drop_table('users_input_curriculums')
    op.drop_table('looking_backs')
    op.drop_table('learning_times')
    op.drop_table('weeks')
    op.drop_table('users')
    op.drop_table('output_curriculums')
    op.drop_table('input_curriculums')
    # ### end Alembic commands ###
