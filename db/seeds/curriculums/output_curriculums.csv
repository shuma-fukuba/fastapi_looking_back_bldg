curriculum,week
Google Chromeをインストールしましたか？,1
Visual Studio Codeをインストールしましたか？,1
Visual Studio Codeの初期設定(editorの設定と日本語化)は出来ましたか？,1
N水族館のサイトをサンプルと同じような見た目で作ることはできましたか？,1
"オリジナルサイト（POSSE課題）
→構成を確認する（ブロック分けのイメージをする）",3
"オリジナルサイト（POSSE課題）
→共通パーツの作成（ヘッダー・フッター・POSSE公式LINEセクション）",3
Gitコマンドをインストールしましたか？,3
"GitHubのposse-apにある個人用のリポジトリ（gen0.0-xxxxxxxxx）をclone出来ましたか？
　※3期生はgen3.0。xxxxxxxxxは自分のGitHubアカウントID",3
"作業用のブランチを作成できましたか？
　※作業用ブランチ名は、ph1-website-xxxxxx
　　xxxxxxは任意です
　　例）開発中ということがわかりやすいように「develop」とする",3
GitHubにpush出来ましたか？,3
"GitHubにpull requestを作成出来ましたか？
　※マージ先ブランチ名は、ph1-website-develop",3
Figmaのアカウントを作成しログインした状態でFigmaを開くことができましたか？,3
トップページとクイズページ用のhtmlファイルを用意できましたか？,3
headでGoogle Fontsを読み込むことはできましたか？,3
ヘッダーを作成することはできましたか？,3
"「POSSE公式LINE」のセクションを作成することはできましたか？
　・背景画像を指定できましたか？
　・背景画像の上に半透明の青を被せられましたか？",3
フッターを作成することはできましたか？,3
Figmaと比べてサイズや幅の違いはありませんか？,3
"メインビジュアルを作成できましたか？
　・画像と見出しが被さるような見た目で実装できましたか？
　・「Scroll Down」を左下に配置できましたか？",4
"「POSSEとは」のセクションを作成することができましたか？
　・見出しをつけられましたか？
　・画像は配置し、角丸にできましたか？
　・テキストと画像を横並びで配置できましたか？",4
固定バナーが常に画面右下にいるよう配置できましたか？,4
Figmaと比べてサイズや幅の違いはありませんか？,4
トップページのhtmlファイルの中でstyle指定をしていないことを確認しましたか？,4
トップページの全体的な見た目はデザインと同じになっていますか？,4
GitHubにプルリクできましたか？,4
クイズページのタイトルと背景画像を配置できましたか？,5
問題文をそれぞれ表示出来ましたか？,5
回答選択肢を３つずつ表示できましたか？,5
引用がある箇所は引用のテキストを配置できましたか？,5
問題文の下に画像は表示できましたか？,5
選択肢にマウスを合わせたらカーソルが矢印から指に変化しますか？,5
htmlファイルの中でstyle指定をしていないことを確認しましたか？,5
全体的な見た目はデザインと同じになっていますか？,5
GitHubにプルリクできましたか？,5
選択肢をクリックすると正解か不正解か表示されますか？,6
クリックした選択肢がFigmaのように強調されましたか？,6
選択肢をクリックした後は同じ問題の選択肢をクリックできないようになっていますか？,6
GitHubにプルリクできましたか？,6
"設問数を増やす場合でもhtmlファイル、cssファイルの修正が不要な作りになっていますか？
→css,htmlを触らずにjsだけで、設問数を増やせる仕様になっていますか？",7
HTMLだけで作成した時とHTMLの構造が変わっていませんか？,7
Figmaと比べてサイズや幅の違いはありませんか？,7
GitHubにプルリクできましたか？,7
"設問数を増やす場合でもhtmlファイル、cssファイルの修正が不要な作りになっていますか？
→css,htmlを触らずにjsだけで、設問数を増やせる仕様になっていますか？",8
Figmaと比べてサイズや幅の違いはありませんか？,8
ページをリロードすると問題と選択肢の順番が変わりますか？,8
GitHubにプルリクできましたか？,8
Figmaと比べてサイズや幅の違いはありませんか？,9
ヘッダーメニューがPCだと全て表示、SPだとハンバーガーメニューにできましたか？,9
ハンバーガーメニューを押してメニューが表示できましたか？,9
画面の幅を動かしても見た目が崩れませんか？,9
GitHubにプルリクできましたか？,9
リーディング動画撮影についての説明は受けましたか？,10
リーディングする対象のソースを受け取りましたか？,10
動画のアップロード先はわかりますか？,10
動画の撮影はしましたか？,10
動画をアップロードしましたか？,10
ライティングについて説明は受けましたか？,11
リーディングのフィードバックについて（補講が必要 or 不要）連絡ありましたか？,12
"補講を受講しましたか？
　※補講が不要と連絡が来た人は、完了のチェックをつけてください",12
"補講を受けた結果、自信を持ってプログラムの説明が出来る状態になりましたか？
　※補講が不要と連絡が来た人は、完了のチェックをつけてください",12
ライティングを実施しましたか？,12
サンプルソースを見なくても同様の実装が出来るように状態になりましたか？,12
"トップページ
上部にPOSSEロゴ、4th weekを表示出来ましたか？",13
"上部に「記録・投稿」ボタンを表示出来ましたか？
",13
学習時間（当日、月合計、全体合計）を表示出来ましたか？,13
下部2020年10月を表示出来ましたか？,13
グラフを除いた全体的な見た目は見本サイトと同じになっていますか？,13
「記録・投稿」ボタンを押下時、モーダルが表示されますか？,13
"モーダル
学習日欄をクリックするとカレンダーが表示されますか？",13
カレンダーの日付をクリックするとテキストボックスに反映されるようになっていますか？,13
学習コンテンツ、学習言語、学習時間、Twitter用コメントを表示出来ましたか？,13
Twitterにシェアするボタンを表示出来ましたか？,13
「記録・投稿」ボタンを表示出来ましたか？,13
上部の_ボタンをクリックするとモーダルを閉じるように出来ましたか？,13
「記録・投稿」ボタン押下時、ローディング画面が表示されるように出来ましたか？,13
全体的な見た目は見本サイトと同じになっていますか？,13
"棒グラフ
y軸に0h、2h、4h、6h、8hを表示出来ましたか？",14
"x軸に2、4、6、8......30を表示出来ましたか？
",14
2h、4h、6h、8h右に横線が表示されないように出来ましたか？,14
グラフ線を青色に出来ましたか？,14
全体的な見た目は見本サイトと同じになっていますか？,14
"円グラフ（学習言語）
ドーナツ型（中央を穴あき）に出来ましたか？",14
ドーナツ型（中央を穴あき）に出来ましたか？,14
円グラフの項目に%表示を出来ましたか？,14
全体的な見た目は見本サイトと同じになっていますか？,14
"円グラフ（学習コンテンツ）
ドーナツ型（中央を穴あき）に出来ましたか？",14
円グラフの項目毎に色を指定できましたか？,14
円グラフの項目に%表示を出来ましたか？,14
全体的な見た目は見本サイトと同じになっていますか？,14
全体的な見た目は見本サイトと同じになっていますか？,15
Dockerをインストールしましたか？,17
DockerでNginxコンテナを起動しましたか？,17
ブラウザで「http://localhost」にアクセスすると自作したQuizyが表示されましたか？,18
Dockerでphpが動作するコンテナを起動しましたか？,19
ブラウザで「http://localhost」にアクセスするとphpinfo();関数の結果が表示されましたか？,20
docker-compose upでnginxとphpとmysqlの両方のコンテナが立ち上がっている,21
Dockerでmysqlが動作するコンテナを起動しましたか？,22
mysqlコマンドでデータベース（mysql）に接続できましたか？,22
mysqlにbig_questionsテーブルを作成出来ましたか？,23
big_questionsテーブルに2レコードのデータを登録出来ましたか？,23
phpでデータベースを検索できましたか,24
"ブラウザで「http://localhost/quiz.php?id=1」にアクセスすると、
　ページタイトルに「東京の難読地名クイズ」が表示されましたか？",24
"ブラウザで「http://localhost/quiz.php?id=2」にアクセスすると、
　ページタイトルに「広島の難読地名クイズ」が表示されましたか？",24
mysqlにquestions、choicesテーブルを作成出来ましたか？,25
questionsテーブルに3レコード、choicesテーブルに9レコードのデータを登録出来ましたか？,25
"ブラウザで「http://localhost/quiz.php?id=1」にアクセスすると、
　「東京の難読地名クイズ」
　設問は「高輪」「亀戸」が表示されましたか？",26
"""ブラウザで「http://localhost/quiz.php?id=2」にアクセスすると、
　「広島の難読地名クイズ」
　設問は「向洋」が表示されましたか？""				",27
"""全体的な見た目は見本サイトと同じになっていますか？
　※選択肢をクリックした際に正解、不正解の表示はされなくてOKです
　https://kuizy.net/quiz/10
　https://kuizy.net/quiz/11""				",28
"must
テーブルに必要な項目を洗い出せましたか？",29
テーブルを定義するSQL文を作りましたか？,29
ダミーデータを作成するSQLを作成しましたか？,29
上記のsqlをsqlファイルに切り出しましたか？ <-　レビューする側がどういうSQLを使っているのかチェックするため,29
作ったSQLをDBコンテナに入り、dbにアクセスし、実行しましたか？,29
"PDOを使用しているか？
",30
DB接続処理の時に、try catchを使いエラーハンドリングしましたか？,30
pdoインスタンスが複数作られないようにしましたか？,30
PDO::ATTR_ERRMODEをPDO::ERRMODE_EXCEPTIONにすることでエラーが吐かれるようにしましたか？,30
whereで条件を絞り、sumにより足し上げた学習時間を取得し、表示できましたか？,30
学習時間を日毎でグルーピングし、チャートに表示できましたか？,31
学習言語別に学習時間を計算しDBから取得し、学習言語のグラフを表示できましたか？,32
学習コンテンツ別に学習時間を計算しDBから取得し、学習コンテンツのグラフを表示できましたか？,32
docker-compose up でエラーなく起動出来ましたか？,33
Laravelの画面が正常に表示されましたか？,33
php artisan migrate:statusコマンドを実行出来ましたか？,33
"■クイズの一覧
ルーティングでURLとcontrollerのアクションの結びつけができましたか？",34
controllerに必要なアクションを記載できましたか？,34
viewファイルはbladeを使いましたか？,34
"■東京の難読地名クイズ
bladeを利用していますか？",34
controllerを利用していますか？,34
ルーティングを利用していますか？,34
URLは「http://localhost/quiz/1」となっていますか？,34
"■広島県の難読地名クイズ
※東京の難読地名クイズと同様です",34
"■テーブル情報と登録データ取得
問題の選択肢の内容をDBの内容をもとに表示していますか？",35
"■東京の難読地名クイズ
参考サイト（https://kuizy.net/quiz/10）と同様に表示出来ましたか？",35
"参考サイト（https://kuizy.net/quiz/10）と同様に、
　選択肢のクリック時に動作しますか？",35
一覧を表示できましたか？,35
リンクをクリックすると、問題のページに遷移出来ますか？,35
"■migration
テーブルを作成できましたか？",35
migrationの実施状況を確認できましたか？,35
テーブル名、項目名、型はバックアップのものと同じになっていますか？,35
rollbackでmigration実行前の状態になりますか？,35
"■seeder
データを登録出来ましたか？",35
テーブルに対応したモデルを作成できましたか？,36
モデルを使ってDB検索を出来ましたか？,36
has Many結合を利用してDB検索出来ましたか？,36
ログイン画面を作成できましたか？,39
"DBのパスワードはハッシュ化されていますか？
",40
5回間違えると3分間ログインできないようになっていますか？,40
登録済みの問題タイトルが一覧で表示されていますか？,41
問題タイトルを追加可能ですか？,41
登録済みの問題タイトルを変更可能ですか？,41
"登録済みの問題タイトルを削除可能ですか？
",41
登録済みの問題タイトルの順序を変更可能ですか？,42
問題タイトルをクリックすると、設問のメンテナンス画面に遷移しますか？,42
"登録済みの設問が一覧で表示されていますか？
",43
設問に画像を設定可能ですか？,43
設問を追加可能ですか？,43
"登録済みの設問を変更可能ですか？
",43
登録済みの設問を削除可能ですか？,43
登録済みの設問の順序を変更可能ですか？,43
設問をクリックすると、選択肢のメンテナンス画面に遷移しますか？,43
登録済みの選択肢が一覧で表示されていますか？,44
登録済みの選択肢を変更可能ですか？,44
"Laravelの機能を使ってテーブル定義、データを準備できますか？
　 php artisan migrate:refresh --seed
",45
Laravelのコントローラ経由でトップページを表示できましたか？,45
Laravelらしい実装で学習時間を表示できましたか？,45
"Laravelらしい実装でカラムチャート（学習時間）を表示できましたか？
",46
Laravelらしい実装で円グラフ（学習言語）を表示できましたか？,46
Laravelらしい実装で円グラフ（学習コンテンツ）を表示できましたか？,46
未ログインの状態でアクセスするとログイン画面に遷移しますか？,47
ログイン画面で正しいID／パスワードを入力すると、ログインできますか？,47
ログイン画面で正しくないID／パスワードを入力すると怒られますか？,47
ログイン後はトップページに遷移しますか？,47
メール受信用のmailhogを起動できましたか？,48
Laravelの設定で、メール送信に利用するサーバをmailhogに指定できましたか？,48
Laravelからメール送信をして、mailhog上でメール確認できましたか？,48
パスワードを忘れたケースを想定して、利用者がパスワードをリセット可能ですか？,48
メールアドレスの所有者であることを確認する仕組みになっていますか？,48
"must
・サンプルコードを取得〜プッシュ〜修正〜プルリク作成
　の一連の作業を実施できましたか？",49
"・Git-flowで必要としている各ブランチの用途を説明できる状態になっていますか？
　- masterブランチってなに
　- developブランチってなに
　- releaseブランチってなに
　- featureブランチってなに",49
"・プルリクエストを作成する意味を説明できる状態になっていますか？
　- プルリクエストを使うことで、◯◯の効果が期待できます。と説明できる",49
"・Gitのコミットメッセージについて、書き方を説明できる状態になっていますか？
　- コミットメッセージを適当に書くのはダメということを理解できている",49
"better
・Git-flowで必要としている各ブランチの用途を説明できる状態になっていますか？
　- hotfix(es)ブランチってなに
　- mainブランチってなに",49
"must
・CSSフレームワークを使うメリットを説明できる状態になってますか？",50
・CSSフレームワークを使うデメリットを説明できる状態になってますか？,50
"・イベント管理サイトの模写が出来ましたか？
　- イベント管理サイトのソースコードをコピーしただけの場合は
　　模写が出来たということにはなりません",50
"must
・フロントエンドの人気フレームワークを認識できましたか？
　React, Vue, Angularになります",51
・SPAとSSRの違いを説明できる状態になっていますか？,51
"・Vue.jsを使ったTodoリストの実装が理解出来ましたか？
　※理解出来るというのは、Todoリストを実装しようとした時に、
　　Google検索などで文献を参照しつつ実装可能な状態です
　　ドットインストールのソースコードをコピーしてこないと作れません。
　　というのは、理解出来ている状態ではありません",51
"・追加機能の実装が出来ましたか？
　※サンプルコードを見ながら実装した場合は、
　　次回同じ機能を実装する場合はサンプルコードを見なくても実装できる
　　（Google検索などで文献を参照しつつ実装出来る）
　　という思える場合にチェックを入れてください",51
"must
・ドットインストールのカリキュラムを最後まで実施し、ピンポンゲームが動く状態になっていますか？",52
"must
・ゲーム開始時にボールが2つ出るようにできましたか？",53
・Ballクラスから2つのインスタンスを作成していますか？,53
・2つのボールが無くなったらGAME OVERになるようにできましたか？,53
"better
・ゲーム開始時にボールが2~5個ランダムに出るようにできましたか？",53
・全てのボールが無くなったらGAME OVERになるようにできましたか？,53
・やっぱりボールを3〜6個となった場合に、すぐ対応できる実装になっていますか？,53
"must
・OSコマンドインジェクションを説明出来ますか？",54
・XSS脆弱性を説明出来ますか？,54
・パスワードのハッシュ化ってなんで必要か説明出来ますか？,54
・総当り攻撃がなにか説明出来ますか？,54
・セッション固定化攻撃脆弱性を説明出来ますか？,54
・CSRF脆弱性を説明出来ますか？,54
"must
・主キーについて説明できますか？",55
・インデックスについて説明できますか？また、作成しない場合にどんな問題が発生するか理解できていますか？,55
・RDBについて説明できますか？,55
・NoSQLについて説明できますか？,55
・イベント管理アプリを実装する場合、RDB／NoSQLのどちらを利用するのが適切ですか？またその理由も説明できますか？,55
・イベント管理アプリのER図を作成できましたか？,55
"■Backend
・ API (APIとは, RestAPI)
　【初学者向け】APIを理解したい人がまず最初に見る動画(14分)",57
"・0からREST APIについて調べてみた
　0からREST APIについて調べてみた",57
"・APIとは？初心者向けに分かりやすく解説します。
　https://products.sint.co.jp/topsic/blog/api",57
"・Postmanのインストールと、住所の取得
　https://qiita.com/morioka1206/items/1bcd62e28e22a4ffdace",57
"・どんなAPIが公開されているか見てみよう
　https://api.app-rox.com/
　→気になったAPIを使って、データの取得をしてみよう


",57
"■Backend
- Testing (単体テスト, 結合テスト, 統合テスト, 受け入れテスト)
→https://pm-rasinban.com/ut-it-st
→https://service.shiftinc.jp/column/3659/",58
"・テスト駆動開発（TDD）とは？TDDの進め方をステップ毎に解説！
→ https://www.qbook.jp/column/20181009_713.html
",58
・教材(Laravel 入門 7-5 ユニットテスト),58
"■DevOps
- IaC
→https://www.sbbit.jp/article/cont1/39402
→https://licensecounter.jp/devops-hub/blog/IaC/",59
"- CI/CD
→ https://codezine.jp/article/detail/11083
→ https://github.co.jp/features/actions",59
"■AWS
【超初心者向け】AWSとは？現役エンジニアが鬼わかりやすく徹底解説

AWS Summit Online 2021 基調講演：テクノロジーが変えるこれからの日本社会",60
